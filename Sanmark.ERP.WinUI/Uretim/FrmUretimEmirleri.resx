<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="barManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="noktalar.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>524, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v20.1" name="DevExpress.Utils.v20.1, Version=20.1.3.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="noktalar.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v20.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYyMC4xLCBWZXJzaW9uPTIwLjEu
        My4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABAAAAAQAAAACQUAAAAP
        BQAAAN0MAAACnQEAAIlQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgGAAAAH/P/YQAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAAE/SURBVDhPzczPK8NxHMfxz3XYbG0xfWtlbBHl5OAmmtR2
        YGQSUpMQZa1pa37ONFYclIOSnOSqJvkxacZ+0NZm9tM0LpLD50942b/wdnJ4XJ6HJ/P/eHH5vVHmIvF9
        2bFTaOfs+HMI3kIbtvKtJJ5sC5aijZwdfQzAk2/GZk5L4s5o4Yw0/IfBYckId64JrqyGZD2tgSOs5uzg
        vQ9rGQ1W0mqS5ZQatpCKs/2iAc7XejhSKhJ7UgXLg8DZ3pse9nJYfBFIbAkB88E6znbzvbAmBVgSSpKF
        uBLTgRrOtrM6zMVrMRtTkMw8K2C+lXPmTndj6kmByaiMxByWYfRaytlqsgsTITnGH6UkY0EpTBcSzpyx
        TozcyzAckJCY7iQw+qo4s0Y6MOivhvFGTNJ/JYbhrJIz/XkF7zkV/YnuRFT6BZHUZVFc69msAAAAAElF
        TkSuQmCCVAEAAIlQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgGAAAAH/P/YQAAAARnQU1BAACxjwv8YQUA
        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
        YIIL
</value>
  </data>
</root>